{"version":3,"file":"static/js/2396.1b2b216b.chunk.js","mappings":"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","sources":["components/studio/hooks/useTimer.js","components/studio/buttons/Reset.js","components/studio/buttons/Swap.js","components/studio/Cycle.js","components/studio/Select.js","components/studio/Timer.js","components/studio/Toggle.js","components/studio/Variable.js","hooks/useNamespace.js","hooks/usePublic.js","hooks/useStudio.js","studios/Demo/components/studio/Deck.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["// Import core components\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\n// Import our components\nimport { useStudio } from 'hooks'\n\nfunction timeToString(t) {\n  if (!t || t <= 0) return '00:00'\n\n  const d = new Date(t).toISOString()\n  return t >= 3600000 ? d.slice(11, -5) : d.slice(14, -5)\n}\n\nexport const useTimer = ({ path }) => {\n  // Redux\n  const val = useStudio(path)\n  // States\n  const [time, setTime] = useState(0)\n  // Refs\n  const t = useRef(null)\n\n  useEffect(() => {\n    setTime(val > 0 ? Math.ceil(val - Date.now()) : -1)\n    if (!val) clearTimeout(t.current)\n  }, [val])\n\n  return useMemo(() => {\n    const obj = {\n      active: time >= 0,\n      text: timeToString(time),\n    }\n\n    clearTimeout(t.current)\n\n    if (time >= 0) {\n      t.current = setTimeout(() => setTime(time - 1000), 1000)\n    }\n\n    return obj\n  }, [time])\n}\n","// Import core components\nimport { useDispatch } from 'react-redux'\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n// Import our components\nimport { resetStudio } from 'db/slices/studio'\nimport { useNamespace } from 'hooks'\n\n// Import style\n// ...\n\nexport const Reset = (properties) => {\n  // Properties\n  const { label, fields } = properties\n  // Hooks\n  const dispatch = useDispatch()\n  const path = useNamespace({})\n\n  const handleClick = (e) => {\n    e.preventDefault()\n\n    dispatch(resetStudio(fields.map((field) => `${[path]}.${field}`)))\n  }\n\n  return (\n    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Reset {label}</Tooltip>}>\n      <Button className=\"text-dark\" variant=\"danger\" onClick={handleClick}>\n        <i className=\"fas fa-rotate-right\" />\n      </Button>\n    </OverlayTrigger>\n  )\n}\n","// Import core components\nimport { useDispatch } from 'react-redux'\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n// Import our components\nimport { swapStudio } from 'db/slices/studio'\nimport { useNamespace } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\n\nexport const Swap = (properties) => {\n  // Properties\n  const { fields, label } = properties\n  // Hooks\n  const dispatch = useDispatch()\n  const path = useNamespace({ type: namespace })\n\n  const handleClick = (e) => {\n    e.preventDefault()\n\n    dispatch(swapStudio(fields.map((field) => `${[path]}.${field}`)))\n  }\n\n  return (\n    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Swap {label}</Tooltip>}>\n      <Button className=\"text-dark\" variant=\"warning\" onClick={handleClick}>\n        <i className=\"fas fa-rotate\" />\n      </Button>\n    </OverlayTrigger>\n  )\n}\n","// Import core components\nimport { useDispatch } from 'react-redux'\nimport { Button, Image } from 'react-bootstrap'\nimport cN from 'classnames'\n\n// Import our components\nimport { updateStudio } from 'db/slices/studio'\nimport { useNamespace, usePublic, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\nconst defaultChoice = 'N/A'\n\nexport const Cycle = (properties) => {\n  // Properties\n  const { choices, image, name, variant } = properties\n  // Hooks\n  const dispatch = useDispatch()\n  const path = useNamespace({ type: namespace, name })\n  const publik = usePublic()\n  // Redux\n  const val = useStudio(path) || defaultChoice\n  // Variables\n  const _choices = [defaultChoice].concat(choices).concat([defaultChoice])\n\n  const handleClick = (e) => {\n    e.preventDefault()\n\n    const next = _choices.findIndex((choice) => choice === val) + 1\n\n    // console.log(path, _choices[next])\n    dispatch(updateStudio({ [path]: _choices[next] }))\n  }\n\n  if (image && val !== defaultChoice) {\n    const img = image.replace(\n      /:choice:/,\n      _choices.find((choice) => choice === val)\n    )\n\n    return (\n      <Button\n        className={cN('d-flex flex-grow-1 justify-content-center align-items-center w-100 h-100')}\n        variant={variant || 'outline-obs'}\n        onClick={handleClick}\n      >\n        <Image src={`${publik}/${img}`} fluid />\n      </Button>\n    )\n  }\n\n  return (\n    <Button className=\"d-flex flex-grow-1 justify-content-center align-items-center w-100 h-100\" variant={variant || 'outline-obs'} onClick={handleClick}>\n      {_choices.find((choice) => choice === val)}\n    </Button>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { FloatingLabel, Form } from 'react-bootstrap'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\n\nexport const Select = (properties) => {\n  // Properties\n  const { children, label, name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    setProps({\n      name: `${namespace}.${name}`,\n    })\n  }, [label, name])\n\n  useEffect(() => {\n    $ref.current.value = val\n  }, [val])\n\n  return (\n    <FloatingLabel label={label} controlId={name}>\n      <Form.Select ref={$ref} {...props}>\n        <option key=\"_\" value=\"\">\n          -- N/A --\n        </option>\n        {children}\n      </Form.Select>\n    </FloatingLabel>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button, FloatingLabel, Form, InputGroup } from 'react-bootstrap'\n\n// Import our components\nimport { updateStudio } from 'db/slices/studio'\nimport { useNamespace, useStudio } from 'hooks'\nimport { useTimer } from './hooks'\n\n// Import style\n// ...\n\nconst namespace = 'timers'\nconst varNamespace = '_timers'\n\nfunction stringToTime(t) {\n  if (t === undefined) return 0\n\n  const timeParts = t.toString().split(':')\n  let s = 0\n  let m = 1\n\n  // Add up the time\n  // Entries with no colon returns in seconds\n  // Adds up to days correctly\n  while (timeParts.length) {\n    s += m * +timeParts.pop()\n    m *= 60\n  }\n\n  // Return seconds\n  return Number.isInteger(s) ? s : 0\n}\n\nexport const Timer = (properties) => {\n  // Properties\n  const { label, name, placeholder } = properties\n  // Hooks\n  const dispatch = useDispatch()\n  const paths = {\n    timer: useNamespace({ type: namespace, name }),\n    var: useNamespace({ type: varNamespace, name }),\n  }\n  const { active, text } = useTimer({ path: paths.timer })\n  // Redux\n  const front = useStudio(paths.var)\n  // States\n  const [disabled, setDisable] = useState(false)\n  // Refs\n  const $ref = useRef(null)\n\n  const handleStart = () => {\n    const now = Date.now()\n    const target = stringToTime($ref.current.value)\n\n    dispatch(\n      updateStudio({\n        [paths.timer]: now + target * 1000,\n        [paths.var]: $ref.current.value,\n      })\n    )\n\n    setDisable(true)\n  }\n\n  const handleStop = () => dispatch(updateStudio({ [paths.timer]: 0 }))\n\n  const handleKey = (e) => {\n    if (e.which === 13) {\n      e.preventDefault()\n      handleStart()\n    }\n  }\n\n  useEffect(() => {\n    setDisable(active)\n  }, [active])\n\n  return active ? (\n    <Button className=\"d-flex flex-grow-1 justify-content-center align-items-center w-100 h-100\" variant=\"outline-obs\" onClick={handleStop}>\n      {label} - {text}\n    </Button>\n  ) : (\n    <InputGroup>\n      <FloatingLabel label={label} onKeyDown={handleKey}>\n        <Form.Control ref={$ref} type=\"text\" placeholder={placeholder || '5:00'} defaultValue={front || ''} disabled={disabled} />\n      </FloatingLabel>\n      <Button variant=\"obs\" disabled={disabled} onClick={handleStart}>\n        <i className=\"await fa fa-spin fa-spinner\" />\n        <i className=\"fas fa-play\" />\n      </Button>\n    </InputGroup>\n  )\n}\n","// Import core components\nimport { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button, Image } from 'react-bootstrap'\nimport cN from 'classnames'\n\n// Import our components\nimport { updateStudio } from 'db/slices/studio'\nimport { useNamespace, usePublic, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst toggleNamespace = 'toggles'\nconst variableNamespace = 'variables'\nconst verbs = ['Show', 'Hide']\n\nexport const Toggle = (properties) => {\n  // Properties\n  const { icon, image, group, label, name, variant, value } = properties\n  const namespace = value ? variableNamespace : toggleNamespace\n  // Hooks\n  const dispatch = useDispatch()\n  const paths = {\n    group: useNamespace({ type: namespace }),\n    toggle: useNamespace({ type: namespace, name }),\n  }\n  const publik = usePublic()\n  // Redux\n  const val = useStudio(paths.toggle) || false\n  // States\n  const [active, setActive] = useState(false)\n  // Variables\n  const isSwitch = value !== undefined\n\n  const handleClick = (e) => {\n    e.preventDefault()\n\n    let obj = {}\n\n    // Optional: Toggle Group\n    // Toggle all group members off\n    if (group) {\n      obj = {\n        ...obj,\n        ...group.reduce((props, key) => ({ ...props, [`${paths.group}.${key}`]: false }), {}),\n      }\n    }\n\n    // Toggle this\n    obj[paths.toggle] = value || !val\n\n    // console.log(obj)\n    dispatch(updateStudio(obj))\n  }\n\n  useEffect(() => {\n    setActive(val === value)\n  }, [val, value])\n\n  if (image) {\n    const _active = isSwitch ? active : val\n    return (\n      <Button\n        className={cN('d-flex flex-grow-1 justify-content-center align-items-center p-0 w-100 h-100 overflow-hidden', _active ? false : 'opacity-50')}\n        variant={variant || 'link'}\n        onClick={handleClick}\n      >\n        <Image src={`${publik}/${image}`} fluid />\n      </Button>\n    )\n  }\n\n  return (\n    <Button\n      className=\"d-flex flex-grow-1 justify-content-center align-items-center w-100 h-100\"\n      variant={val ? variant || 'obs' : `outline-${variant || 'obs'}`}\n      onClick={handleClick}\n    >\n      {icon ? (\n        <i className={`fas fa-${icon}`} />\n      ) : (\n        <>\n          {verbs[Number(val) || 0]} {label}\n        </>\n      )}\n    </Button>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { FloatingLabel, Form } from 'react-bootstrap'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\n\nexport const Variable = (properties) => {\n  // Properties\n  const { as: type = 'text', label, name, placeholder } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    $ref.current.value = val\n  }, [val])\n\n  useEffect(() => {\n    setProps({\n      defaultValue: val,\n      name: `${namespace}.${name}`,\n      placeholder: placeholder || label,\n      [type === 'textarea' ? 'as' : 'type']: type,\n    })\n  }, [label, name, placeholder, type, val])\n\n  return (\n    <FloatingLabel label={label} controlId={name}>\n      <Form.Control ref={$ref} {...props} />\n    </FloatingLabel>\n  )\n}\n","// Import core components\nimport { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const useNamespace = ({ type, name }) => {\n  // Hooks\n  const params = useParams()\n  const { code } = params\n\n  return useMemo(() => {\n    const path = [code]\n\n    if (type) path.push(type)\n    if (name) path.push(name)\n\n    return path.join('.')\n  }, [code, type, name])\n}\n","// Import core components\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const usePublic = () => {\n  // Hooks\n  const params = useParams()\n  // Variables\n  const publik = `./${params.code}`\n\n  return publik\n}\n","// Import core components\nimport { useSelector } from 'react-redux'\n\n// Import our components\nimport { selector } from 'db/slices/studio'\n\nexport const useStudio = (path) => useSelector((state) => selector(state, path))\n","// Import core components\nimport { Col, Row } from 'react-bootstrap'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\nimport { ResetButton, Toggle } from 'components/studio'\nimport arsenals from '../arsenals.json'\n\n// Import style\n// ...\n\n/**\n * Studio: Command & Conquer - Deck\n *\n * @returns {React.FunctionComponentElement} React.FunctionComponentElement\n */\nfunction Deck(properties) {\n  // Properties\n  const { faction, player } = properties\n  // Hooks\n  const path = useNamespace({ type: 'variables', name: `players.${player}.displayName` })\n  // Redux\n  const playerName = useStudio(path)\n\n  return (\n    <>\n      <Row className=\"gx-2\">\n        <Col>\n          <legend>\n            {faction} Deck for <i>{playerName}</i>\n          </legend>\n        </Col>\n        <Col xs=\"auto\">\n          <ResetButton label={`all decks of ${playerName}`} fields={[`variables.players.${player}.deck`, `toggles.players.${player}.deck`]} />\n        </Col>\n      </Row>\n      <Row className=\"gx-2\">\n        {arsenals[faction].commanders.map((commander) => (\n          <Col key={commander}>\n            <Toggle image={`commanders/${commander}.jpg`} name={`players.${player}.deck.commander`} value={commander} variant=\"link\" />\n          </Col>\n        ))}\n      </Row>\n      <Row className=\"g-2 mt-0\">\n        {arsenals[faction].units.barracks.map((unit) => (\n          <Col key={unit} xs={2}>\n            <Toggle image={`units/${unit}.webp`} name={`players.${player}.deck.units.${unit}`} />\n          </Col>\n        ))}\n        {arsenals[faction].units.vehicles.map((unit) => (\n          <Col key={unit} xs={2}>\n            <Toggle image={`units/${unit}.webp`} name={`players.${player}.deck.units.${unit}`} />\n          </Col>\n        ))}\n        {arsenals[faction].units.aircraft.map((unit) => (\n          <Col key={unit} xs={2}>\n            <Toggle image={`units/${unit}.webp`} name={`players.${player}.deck.units.${unit}`} />\n          </Col>\n        ))}\n        {arsenals[faction].units.tech.map((unit) => (\n          <Col key={unit} xs={2}>\n            <Toggle image={`units/${unit}.webp`} name={`players.${player}.deck.units.${unit}`} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\n// Exported Component for use\nexport default Deck\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["timeToString","t","d","Date","toISOString","slice","useTimer","_ref","path","val","useStudio","_useState","useState","_useState2","_slicedToArray","time","setTime","useRef","useEffect","Math","ceil","now","clearTimeout","current","useMemo","obj","active","text","setTimeout","Reset","properties","label","fields","dispatch","useDispatch","useNamespace","_jsx","OverlayTrigger","placement","overlay","_jsxs","Tooltip","children","Button","className","variant","onClick","e","preventDefault","resetStudio","map","field","concat","Swap","type","swapStudio","defaultChoice","Cycle","choices","image","name","publik","usePublic","_choices","handleClick","next","findIndex","choice","updateStudio","_defineProperty","img","replace","find","cN","Image","src","fluid","namespace","Select","props","setProps","$ref","value","FloatingLabel","controlId","Form","_objectSpread","ref","Timer","placeholder","paths","timer","var","_useTimer","front","disabled","setDisable","handleStart","_updateStudio","target","undefined","timeParts","toString","split","s","m","length","pop","Number","isInteger","stringToTime","InputGroup","onKeyDown","which","defaultValue","verbs","Toggle","icon","group","toggle","setActive","isSwitch","reduce","key","_active","_Fragment","Variable","_properties$as","as","code","useParams","push","join","params","useSelector","state","selector","faction","player","playerName","Row","Col","xs","ResetButton","arsenals","commanders","commander","units","barracks","unit","vehicles","aircraft","tech","PropTypes","React","bsPrefix","rounded","roundedCircle","thumbnail","_objectWithoutProperties","_excluded","useBootstrapPrefix","classNames","displayName","defaultProps","_ref$as","Component","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix"],"sourceRoot":""}