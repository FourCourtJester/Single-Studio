{"version":3,"file":"static/js/200.eaaca8e9.chunk.js","mappings":"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","sources":["projects/R001/Studio.js","projects/R001/components/studio/Decks.js","projects/R001/components/studio/Maps.js"],"sourcesContent":["// Import core components\nimport { Col, Row } from 'react-bootstrap'\n\n// Import our components\nimport { Cycle, ResetButton, SwapButton, Timer, Toggle, Variable } from 'components/studio'\nimport { Decks, Maps } from './components/studio'\n\n// Import style\n// ...\n\n/**\n * Studio: Command & Conquer\n *\n * @returns {React.FunctionComponentElement} React.FunctionComponentElement\n */\nfunction Studio() {\n  return (\n    <>\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <legend className=\"m-0\">Player One</legend>\n            </Col>\n            <Col xs=\"auto\">\n              <SwapButton\n                fields={[\n                  'players.1.displayName',\n                  'players.1.score',\n                  'players.1.alliance',\n                  'players.1.deck.faction',\n                  'players.2.displayName',\n                  'players.2.score',\n                  'players.2.alliance',\n                  'players.2.deck.faction',\n                ]}\n                label=\"Players\"\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row>\n            <Col>\n              <legend className=\"m-0\">Player Two</legend>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Row className=\"gx-2\">\n                <Col>\n                  <Variable label=\"Player Name\" name=\"players.1.displayName\" />\n                </Col>\n                <Col xs={2}>\n                  <Variable as=\"number\" label=\"Score\" name=\"players.1.score\" />\n                </Col>\n              </Row>\n              <Row className=\"gx-2\">\n                <Col>\n                  <Variable label=\"Alliance\" name=\"players.1.alliance\" />\n                </Col>\n                <Col xs={2}>\n                  <Cycle name=\"players.1.deck.faction\" choices={['GDI', 'Nod']} image=\"logos/:choice:.png\" variant=\"link\" />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row>\n            <Col>\n              <Row className=\"gx-2\">\n                <Col>\n                  <Variable label=\"Player Name\" name=\"players.2.displayName\" />\n                </Col>\n                <Col xs={2}>\n                  <Variable as=\"number\" label=\"Score\" name=\"players.2.score\" />\n                </Col>\n              </Row>\n              <Row className=\"gx-2\">\n                <Col>\n                  <Variable label=\"Alliance\" name=\"players.2.alliance\" />\n                </Col>\n                <Col xs={2}>\n                  <Cycle choices={['GDI', 'Nod']} name=\"players.2.deck.faction\" image=\"logos/:choice:.png\" variant=\"link\" />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <legend>Series</legend>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Row className=\"gx-2\">\n            <Col>\n              <Timer label=\"Countdown\" name=\"countdown\" />\n            </Col>\n            <Col>\n              <Variable label=\"Round\" name=\"series.round\" />\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className=\"gx-2\">\n            <Col>\n              <Variable as=\"number\" label=\"Game\" name=\"series.game.current\" />\n            </Col>\n            <Col className=\"d-flex align-items-center\" xs=\"auto\">\n              <span>of</span>\n            </Col>\n            <Col>\n              <Variable as=\"number\" label=\"Limit\" name=\"series.game.max\" />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <legend>Map &amp; Missiles</legend>\n        </Col>\n        <Col xs=\"auto\">\n          <ResetButton paths={['toggles.missile', 'variables.map']} label=\"Map & Missiles\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Row className=\"d-flex flex-row align-items-center h-100 gx-2\">\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.1.player.1\" group={['missile.1.player.1', 'missile.1.player.2']} />\n            </Col>\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.2.player.1\" group={['missile.2.player.1', 'missile.2.player.2']} />\n            </Col>\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.3.player.1\" group={['missile.3.player.1', 'missile.3.player.2']} />\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Maps />\n        </Col>\n        <Col>\n          <Row className=\"d-flex flex-row align-items-center h-100 gx-2\">\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.1.player.2\" variant=\"danger\" group={['missile.1.player.1', 'missile.1.player.2']} />\n            </Col>\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.2.player.2\" variant=\"danger\" group={['missile.2.player.1', 'missile.2.player.2']} />\n            </Col>\n            <Col>\n              <Toggle icon=\"rocket\" name=\"missile.3.player.2\" variant=\"danger\" group={['missile.3.player.1', 'missile.3.player.2']} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Decks player=\"1\" />\n        </Col>\n        <Col>\n          <Decks player=\"2\" />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n// Exported Component for use\nexport default {\n  name: 'Command & Conquer Rivals Test',\n  Page: Studio,\n}\n","// Import core components\nimport { Col } from 'react-bootstrap'\n\n// Import our components\nimport { useStudio } from 'hooks'\nimport Deck from './Deck'\n\n// Import style\n// ...\n\n/**\n * Studio: Command & Conquer - Decks\n *\n * @returns {React.FunctionComponentElement} React.FunctionComponentElement\n */\nfunction Decks(properties) {\n  // Properties\n  const { player } = properties\n  // Redux\n  const faction = useStudio(`variables.players.${player}.deck.faction`)\n\n  return (\n    <Col>\n      {faction === 'GDI' && <Deck faction=\"GDI\" player={player} />}\n      {faction === 'Nod' && <Deck faction=\"Nod\" player={player} />}\n    </Col>\n  )\n}\n\n// Exported Component for use\nexport default Decks\n","// Import core components\nimport { Image, OverlayTrigger, Popover, Row } from 'react-bootstrap'\n\n// Import our components\nimport { useStudio } from 'hooks'\nimport { Select } from 'components/studio'\nimport allMaps from '../maps.json'\n\n// Import style\n// ...\n\n/**\n * Studio: Command & Conquer - Maps\n *\n * @returns {React.FunctionComponentElement} React.FunctionComponentElement\n */\nfunction Maps() {\n  // Redux\n  const currentMap = useStudio(`variables.map`)\n  // Variables\n  const { maps } = allMaps\n\n  return (\n    <Row className=\"d-flex flex-column justify-content-center align-items-center gx-2\">\n      {/* {currentMap && <Image className=\"mb-2\" src={`/R001/maps/preview/${currentMap}.webp`} fluid />} */}\n      <Select label=\"Current Map\" name=\"map\">\n        {maps.map((map) => (\n          <option key={map} value={map}>\n            {map}\n          </option>\n        ))}\n      </Select>\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={\n          <Popover>\n            <Popover.Body>\n              <Image className=\"mb-2\" src={`/R001/maps/preview/${currentMap}.webp`} fluid />\n            </Popover.Body>\n          </Popover>\n        }\n      >\n        <a className=\"text-success text-center m-0\">Preview</a>\n      </OverlayTrigger>\n    </Row>\n  )\n\n  // return (\n  //   <Row className=\"g-2 mt-0\">\n  //     {maps.map((map) => (\n  //       <Col xs={4}>\n  //         <Button className=\"d-flex flex-grow-1 justify-content-center align-items-center p-0 w-100 h-100 overflow-hidden\" variant=\"info\">\n  //           <Image src={`/R001/maps/preview/${map}.webp`} fluid />\n  //         </Button>\n  //       </Col>\n  //     ))}\n  //   </Row>\n  // )\n}\n\n// Exported Component for use\nexport default Maps\n"],"names":["name","Page","_jsxs","_Fragment","children","Row","_jsx","Col","className","xs","SwapButton","fields","label","Variable","as","Cycle","choices","image","variant","Timer","ResetButton","paths","Toggle","icon","group","Maps","Decks","player","properties","faction","useStudio","concat","Deck","currentMap","maps","allMaps","Select","map","value","OverlayTrigger","placement","overlay","Popover","Image","src","fluid"],"sourceRoot":""}