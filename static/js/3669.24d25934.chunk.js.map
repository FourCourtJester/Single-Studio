{"version":3,"file":"static/js/3669.24d25934.chunk.js","mappings":"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","sources":["components/source/Image.js","components/source/Scene.js","components/source/Timer.js","components/source/Toggle.js","components/source/Variable.js","components/studio/hooks/useTimer.js","hooks/useNamespace.js","hooks/usePublic.js","hooks/useStudio.js","studios/Demo/components/source/replay/Scoreboard.js"],"sourcesContent":["// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, usePublic, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\nconst defaultSrc = '1x1.png'\n\nexport const _Image = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Hooks\n  const publik = usePublic()\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  const [src, setSrc] = useState(defaultSrc)\n  // Refs\n  const $ref = useRef(null)\n\n  const handleError = (e) => {\n    console.warn(e)\n    setSrc(defaultSrc)\n  }\n\n  useEffect(() => {\n    const { src: _src } = properties\n\n    setSrc(`${publik}/${_src.replace(/:var:/, val)}`)\n  }, [properties, publik, val])\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('variable', className),\n      onError: handleError,\n      src,\n      // src: src ? `${publik}/${src.replace(/:var:/, val)}` : `1x1.png`,\n    })\n  }, [properties, publik, src, val])\n\n  return (\n    <SwitchTransition>\n      <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear key={val} nodeRef={$ref}>\n        <img ref={$ref} {...props} />\n      </CSSTransition>\n    </SwitchTransition>\n  )\n}\n","// Import core components\nimport cN from 'classnames'\n\n// Import our components\n// ...\n\n// Import style\n// ...\n\nexport const Scene = (properties) => {\n  const { children, className, id } = properties\n\n  return (\n    <div id={id} className={cN(className, 'overflow-hidden')}>\n      {children}\n    </div>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace } from 'hooks'\nimport { useTimer } from '../studio/hooks'\n\n// Import style\n// ...\n\nconst namespace = 'timers'\n\nexport const Timer = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  const { active, text } = useTimer({ path })\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('timer', className),\n    })\n  }, [properties])\n\n  return (\n    <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next)} appear in={active} nodeRef={$ref}>\n      <span ref={$ref} {...props}>\n        {text}\n      </span>\n    </CSSTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'toggles'\n\nexport const Toggle = (properties) => {\n  // Properties\n  const { children, name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || false\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('toggle', className),\n    })\n  }, [properties, val])\n\n  return (\n    <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear in={val} nodeRef={$ref}>\n      <div ref={$ref} {...props}>\n        {children}\n      </div>\n    </CSSTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\n\nexport const Variable = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('variable', className),\n    })\n  }, [properties, val])\n\n  return (\n    <SwitchTransition>\n      <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear key={val} nodeRef={$ref}>\n        <var ref={$ref} {...props}>\n          {val}\n        </var>\n      </CSSTransition>\n    </SwitchTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\n// Import our components\nimport { useStudio } from 'hooks'\n\nfunction timeToString(t) {\n  if (!t || t <= 0) return '00:00'\n\n  const d = new Date(t).toISOString()\n  return t >= 3600000 ? d.slice(11, -5) : d.slice(14, -5)\n}\n\nexport const useTimer = ({ path }) => {\n  // Redux\n  const val = useStudio(path)\n  // States\n  const [time, setTime] = useState(0)\n  // Refs\n  const t = useRef(null)\n\n  useEffect(() => {\n    setTime(val > 0 ? Math.ceil(val - Date.now()) : -1)\n    if (!val) clearTimeout(t.current)\n  }, [val])\n\n  return useMemo(() => {\n    const obj = {\n      active: time >= 0,\n      text: timeToString(time),\n    }\n\n    clearTimeout(t.current)\n\n    if (time >= 0) {\n      t.current = setTimeout(() => setTime(time - 1000), 1000)\n    }\n\n    return obj\n  }, [time])\n}\n","// Import core components\nimport { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const useNamespace = ({ type, name }) => {\n  // Hooks\n  const params = useParams()\n  const { code } = params\n\n  return useMemo(() => {\n    const path = [code]\n\n    if (type) path.push(type)\n    if (name) path.push(name)\n\n    return path.join('.')\n  }, [code, type, name])\n}\n","// Import core components\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const usePublic = () => {\n  // Hooks\n  const params = useParams()\n  // Variables\n  const publik = `./${params.code}`\n\n  return publik\n}\n","// Import core components\nimport { useSelector } from 'react-redux'\n\n// Import our components\nimport { selector } from 'db/slices/studio'\n\nexport const useStudio = (path) => useSelector((state) => selector(state, path))\n","// Import core components\nimport { useEffect, useState } from 'react'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\nimport { Image } from 'components/source'\n\n// Import style\n// ...\n\n/**\n * Source: Command & Conquer - Scoreboard\n *\n * @returns {React.FunctionComponentElement} React.FunctionComponentElement\n */\nfunction Deck(properties) {\n  // Properties\n  const { player, reverse } = properties\n  // Hooks\n  const path = useNamespace({ type: 'variables' })\n  // Redux\n  const score = +useStudio(`${path}.players.${player}.score`) || 0\n  const faction = useStudio(`${path}.players.${player}.deck.faction`)\n  const series = +useStudio(`${path}.series.game.max`) || 3\n  // Variables\n  const [gameNum, setGameNum] = useState([0, 0, 0])\n\n  useEffect(() => {\n    const n = Math.floor((series || 1) / 2) + 1\n    setGameNum(Array(n).fill(() => 0))\n  }, [series])\n\n  return (\n    <p className={cN('score d-flex', reverse ? 'flex-row-reverse' : 'flex-row', 'mb-1')}>\n      {gameNum.map((_, i) => (\n        <Image key={i} src={`overlay/game/points/${faction}-${score <= i ? 0 : 1}.png`} />\n      ))}\n    </p>\n  )\n}\n\n// Exported Component for use\nexport default Deck\n"],"names":["defaultSrc","_Image","properties","name","path","useNamespace","type","publik","usePublic","val","useStudio","_useState","useState","_useState2","_slicedToArray","props","setProps","_useState3","_useState4","src","setSrc","$ref","useRef","handleError","e","console","warn","useEffect","_src","concat","replace","className","_objectSpread","cN","onError","_jsx","SwitchTransition","children","CSSTransition","addEndListener","next","current","addEventListener","appear","nodeRef","ref","Scene","id","Timer","_useTimer","useTimer","active","text","in","Toggle","Variable","timeToString","t","d","Date","toISOString","slice","_ref","time","setTime","Math","ceil","now","clearTimeout","useMemo","obj","setTimeout","code","useParams","push","join","params","useSelector","state","selector","player","reverse","score","faction","series","gameNum","setGameNum","n","floor","Array","fill","map","_","i","Image"],"sourceRoot":""}