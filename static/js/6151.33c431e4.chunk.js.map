{"version":3,"file":"static/js/6151.33c431e4.chunk.js","mappings":"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","sources":["components/interactive/source/Timer.js","components/source/Image.js","components/source/Scene.js","components/source/Timer.js","components/source/Toggle.js","components/source/Variable.js","components/studio/hooks/useTimer.js","hooks/useNamespace.js","hooks/usePublic.js","hooks/useStudio.js"],"sourcesContent":["// Import core components\nimport { useSearchParams } from 'react-router-dom'\n\n// Import our components\nimport { Timer } from 'components/source'\n\n// Import style\n// ...\n\nfunction TimerType() {\n  // Hooks\n  const [query] = useSearchParams()\n\n  // Avoid undefined names\n  if (!query.get('name')) return null\n\n  return <Timer name={query.get('name')} />\n}\n\n// Exported Component for use\nexport default TimerType\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, usePublic, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\nconst defaultSrc = '1x1.png'\n\nexport const _Image = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Hooks\n  const publik = usePublic()\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  const [src, setSrc] = useState(defaultSrc)\n  // Refs\n  const $ref = useRef(null)\n\n  const handleError = (e) => {\n    console.warn(e)\n    setSrc(defaultSrc)\n  }\n\n  useEffect(() => {\n    const { src: _src } = properties\n\n    setSrc(`${publik}/${_src.replace(/:var:/, val)}`)\n  }, [properties, publik, val])\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('variable', className),\n      onError: handleError,\n      src,\n      // src: src ? `${publik}/${src.replace(/:var:/, val)}` : `1x1.png`,\n    })\n  }, [properties, publik, src, val])\n\n  return (\n    <SwitchTransition>\n      <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear key={val} nodeRef={$ref}>\n        <img ref={$ref} {...props} />\n      </CSSTransition>\n    </SwitchTransition>\n  )\n}\n","// Import core components\nimport cN from 'classnames'\n\n// Import our components\n// ...\n\n// Import style\n// ...\n\nexport const Scene = (properties) => {\n  const { children, className, id } = properties\n\n  return (\n    <div id={id} className={cN(className, 'overflow-hidden')}>\n      {children}\n    </div>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace } from 'hooks'\nimport { useTimer } from '../studio/hooks'\n\n// Import style\n// ...\n\nconst namespace = 'timers'\n\nexport const Timer = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  const { active, text } = useTimer({ path })\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('timer', className),\n    })\n  }, [properties])\n\n  return (\n    <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next)} appear in={active} nodeRef={$ref}>\n      <span ref={$ref} {...props}>\n        {text}\n      </span>\n    </CSSTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'toggles'\n\nexport const Toggle = (properties) => {\n  // Properties\n  const { children, name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || false\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('toggle', className),\n    })\n  }, [properties, val])\n\n  return (\n    <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear in={val} nodeRef={$ref}>\n      <div ref={$ref} {...props}>\n        {children}\n      </div>\n    </CSSTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useRef, useState } from 'react'\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\nimport cN from 'classnames'\n\n// Import our components\nimport { useNamespace, useStudio } from 'hooks'\n\n// Import style\n// ...\n\nconst namespace = 'variables'\n\nexport const Variable = (properties) => {\n  // Properties\n  const { name } = properties\n  // Hooks\n  const path = useNamespace({ type: namespace, name })\n  // Redux\n  const val = useStudio(path) || ''\n  // States\n  const [props, setProps] = useState({})\n  // Refs\n  const $ref = useRef(null)\n\n  useEffect(() => {\n    const { className } = properties\n\n    setProps({\n      ...properties,\n      className: cN('variable', className),\n    })\n  }, [properties, val])\n\n  return (\n    <SwitchTransition>\n      <CSSTransition addEndListener={(next) => $ref.current.addEventListener('transitionend', next, true)} appear key={val} nodeRef={$ref}>\n        <var ref={$ref} {...props}>\n          {val}\n        </var>\n      </CSSTransition>\n    </SwitchTransition>\n  )\n}\n","// Import core components\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\n// Import our components\nimport { useStudio } from 'hooks'\n\nfunction timeToString(t) {\n  if (!t || t <= 0) return '00:00'\n\n  const d = new Date(t).toISOString()\n  return t >= 3600000 ? d.slice(11, -5) : d.slice(14, -5)\n}\n\nexport const useTimer = ({ path }) => {\n  // Redux\n  const val = useStudio(path)\n  // States\n  const [time, setTime] = useState(0)\n  // Refs\n  const t = useRef(null)\n\n  useEffect(() => {\n    setTime(val > 0 ? Math.ceil(val - Date.now()) : -1)\n    if (!val) clearTimeout(t.current)\n  }, [val])\n\n  return useMemo(() => {\n    const obj = {\n      active: time >= 0,\n      text: timeToString(time),\n    }\n\n    clearTimeout(t.current)\n\n    if (time >= 0) {\n      t.current = setTimeout(() => setTime(time - 1000), 1000)\n    }\n\n    return obj\n  }, [time])\n}\n","// Import core components\nimport { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const useNamespace = ({ type, name }) => {\n  // Hooks\n  const params = useParams()\n  const { code } = params\n\n  return useMemo(() => {\n    const path = [code]\n\n    if (type) path.push(type)\n    if (name) path.push(name)\n\n    return path.join('.')\n  }, [code, type, name])\n}\n","// Import core components\nimport { useParams } from 'react-router-dom'\n\n// Import our components\n\nexport const usePublic = () => {\n  // Hooks\n  const params = useParams()\n  // Variables\n  const publik = `./${params.code}`\n\n  return publik\n}\n","// Import core components\nimport { useSelector } from 'react-redux'\n\n// Import our components\nimport { selector } from 'db/slices/studio'\n\nexport const useStudio = (path) => useSelector((state) => selector(state, path))\n"],"names":["_useSearchParams","useSearchParams","query","_slicedToArray","get","_jsx","Timer","name","defaultSrc","_Image","properties","path","useNamespace","type","publik","usePublic","val","useStudio","_useState","useState","_useState2","props","setProps","_useState3","_useState4","src","setSrc","$ref","useRef","handleError","e","console","warn","useEffect","_src","concat","replace","className","_objectSpread","cN","onError","SwitchTransition","children","CSSTransition","addEndListener","next","current","addEventListener","appear","nodeRef","ref","Scene","id","_useTimer","useTimer","active","text","in","Toggle","Variable","timeToString","t","d","Date","toISOString","slice","_ref","time","setTime","Math","ceil","now","clearTimeout","useMemo","obj","setTimeout","code","useParams","push","join","params","useSelector","state","selector"],"sourceRoot":""}